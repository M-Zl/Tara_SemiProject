--MEMBER 테이블
CREATE TABLE MEMBER (
    USER_NO NUMBER PRIMARY KEY,
    USER_ID VARCHAR2(20) NOT NULL UNIQUE,
    USER_PWD VARCHAR2(200) NOT NULL,
    USER_NAME VARCHAR2(15) NOT NULL,
    PHONE VARCHAR2(20),
    USER_EMAIL VARCHAR2(40),
    USER_ROLE NUMBER DEFAULT 1,
    ADDRESS VARCHAR2(40),
    USER_IMG VARCHAR(40), 
    TRAVEL VARCHAR2(40),    
    CREATE_DATE DATE DEFAULT SYSDATE,
    MODIFY_DATE DATE DEFAULT SYSDATE,
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK(STATUS IN('Y', 'N'))
);

COMMENT ON COLUMN MEMBER.USER_NO IS '회원번호';
COMMENT ON COLUMN MEMBER.USER_ID IS '회원아이디';
COMMENT ON COLUMN MEMBER.USER_PWD IS '회원비밀번호';
COMMENT ON COLUMN MEMBER.USER_NAME IS '회원이름';
COMMENT ON COLUMN MEMBER.PHONE IS '전화번호';
COMMENT ON COLUMN MEMBER.USER_EMAIL IS '이메일';
COMMENT ON COLUMN MEMBER.USER_ROLE IS '회원타입(1 유저, 2 어드민)';
COMMENT ON COLUMN MEMBER.ADDRESS IS '거주지';
COMMENT ON COLUMN MEMBER.USER_IMG IS '프로필사진';
COMMENT ON COLUMN MEMBER.TRAVEL IS '가고싶은지역';
COMMENT ON COLUMN MEMBER.CREATE_DATE IS '회원생성일자';
COMMENT ON COLUMN MEMBER.MODIFY_DATE IS '회원수정일자';
COMMENT ON COLUMN MEMBER.STATUS IS '회원상태값(Y/N)';

CREATE SEQUENCE SEQ_UNO;

INSERT INTO MEMBER VALUES(
    SEQ_UNO.NEXTVAL,'admin', 'admin','관리자','010-0000-0000','admin@admin.com',2,'서울시 강남구 역삼동', NULL,NULL, SYSDATE, SYSDATE, DEFAULT
);


INSERT INTO MEMBER VALUES(
    SEQ_UNO.NEXTVAL,'user2', 'user2','유저','010-0000-0000','admin@admin.com',1,'서울시 강남구 역삼동', NULL,NULL, SYSDATE, SYSDATE, DEFAULT
);

COMMIT;

-- 멤버 조회
-- SELECT * FROM MEMBER WHERE USER_ID=? AND USER_PWD=?

-- 멤버 추가
-- INSERT INTO MEMBER VALUES(SEQ_UNO.NEXTVAL,?,?,?,?,?,1,?,?,?,SYSDATE,SYSDATE,'Y')

-- 멤버 찾기
-- SELECT * FROM MEMBER WHERE USER_ID=?

-- 멤버 수정
-- UPDATE MEMBER SET USER_NAME=?,MODIFY_DATE=SYSDATE WHERE USER_ID=?

-- 멤버 패스워드 변경
-- UPDATE MEMBER SET USER_PWD=? WHERE USER_ID=?

-- 멤버 삭제
-- UPDATE MEMBER SET STATUS='N' WHERE USER_ID=?


--BOARD 테이블
CREATE TABLE BOARD (   
    BOARD_NO NUMBER PRIMARY KEY,
    BOARD_WRITER_NO NUMBER, 
    LOC_NAME VARCHAR2(10) NOT NULL,
    BOARD_NAME VARCHAR2(10) NOT NULL,
    BOARD_TITLE VARCHAR2(100) NOT NULL,
    BOARD_CONTENT VARCHAR2(2000),
    BOARD_READCOUNT NUMBER DEFAULT 0, 
    BOARD_ORIGINAL_FILENAME VARCHAR2(100), 
   BOARD_RENAMED_FILENAME VARCHAR2(100),
    TRANSPORT VARCHAR2(20),
    TRAVEL_MONEY VARCHAR2(20),
    BOARD_SCORE NUMBER,
    BOARD_CREATE_DATE DATE DEFAULT SYSDATE, 
    BOARD_MODIFY_DATE DATE DEFAULT SYSDATE, 
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN('Y', 'N')),
    CONSTRAINT FK_BOARD_WRITER FOREIGN KEY(BOARD_WRITER_NO) REFERENCES MEMBER(USER_NO) ON DELETE SET NULL
);

COMMENT ON COLUMN BOARD.BOARD_NO IS '게시글번호';
COMMENT ON COLUMN BOARD.BOARD_WRITER_NO IS '회원번호';
COMMENT ON COLUMN BOARD.LOC_NAME IS '지역이름';
COMMENT ON COLUMN BOARD.BOARD_NAME IS '게시판이름';
COMMENT ON COLUMN BOARD.BOARD_TITLE IS '게시글제목';
COMMENT ON COLUMN BOARD.BOARD_CONTENT IS '게시글내용';
COMMENT ON COLUMN BOARD.BOARD_READCOUNT IS '조회수';
COMMENT ON COLUMN BOARD.BOARD_ORIGINAL_FILENAME IS '파일이름';
COMMENT ON COLUMN BOARD.BOARD_RENAMED_FILENAME IS '변경된파일이름';
COMMENT ON COLUMN BOARD.TRANSPORT IS '교통수단';
COMMENT ON COLUMN BOARD.TRAVEL_MONEY IS '경비';
COMMENT ON COLUMN BOARD.BOARD_SCORE IS '별점';
COMMENT ON COLUMN BOARD.BOARD_CREATE_DATE IS '등록일자';
COMMENT ON COLUMN BOARD.BOARD_MODIFY_DATE IS '수정일자';
COMMENT ON COLUMN BOARD.STATUS IS '게시글상태 (Y/N)';

CREATE SEQUENCE SEQ_BOARD_NO;


INSERT INTO BOARD VALUES
(SEQ_BOARD_NO.NEXTVAL, 2, '강원도', '여행','강원도 여행 게시글','게시글 내용입니다', DEFAULT, '원본파일명.txt', '변경된파일명.txt','도보','0',0,SYSDATE,SYSDATE, 'Y');

BEGIN
    FOR N IN 1..52
    LOOP
        INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL, 2, '강원도', '여행','강원도 게시글 ' || SEQ_BOARD_NO.CURRVAL,'게시글 내용입니다'||  SEQ_BOARD_NO.CURRVAL, DEFAULT,null, null,null,null,null,SYSDATE,SYSDATE, 'Y');
    END LOOP;
    
    COMMIT;
EXCEPTION
    WHEN OTHERS THEN ROLLBACK;
END;
/

COMMIT;

-- 게시글 조회
SELECT B.BOARD_NO, B.BOARD_TITLE, M.USER_ID, B.BOARD_CREATE_DATE, B.BOARD_READCOUNT,
        (SELECT COUNT(*) FROM LIKECOUNT WHERE BOARD_NO = 1) LCOUNT , (SELECT COUNT(*) FROM COMMENTS WHERE COMMENT_BOARD_NO = 1) CCOUNT
FROM BOARD B, MEMBER M
WHERE B.BOARD_WRITER_NO = M.USER_NO AND B.STATUS ='Y' AND B.BOARD_NO = 1
ORDER BY BOARD_NO DESC;

-- 역순으로 리스트 조회하기
SELECT B.BOARD_NO, B.BOARD_TITLE, M.USER_ID, B.BOARD_CREATE_DATE, B.BOARD_READCOUNT
FROM BOARD B
JOIN MEMBER M ON(B.BOARD_WRITER_NO = M.USER_NO)
WHERE B.STATUS = 'Y'
ORDER BY BOARD_NO DESC;

-- 총 게시글 갯수
-- SELECT COUNT(*) FROM BOARD;

-- 조회수 증가
-- UPDATE BOARD SET BOARD_READCOUNT=BOARD_READCOUNT+1 WHERE BOARD_NO=?

-- 게시글 작성
-- INSERT INTO BOARD VALUES(SEQ_BOARD_NO.NEXTVAL,?,?,?,?,?,DEFAULT,?,?,?,?,?,DEFAULT,DEFAULT,DEFAULT);

-- 게시글 수정
-- UPDATE BOARD SET BOARD_TITLE=?,BOARD_CONTENT=? WHERE BOARD_NO=?

-- 게시글 삭제
-- UPDATE BOARD SET STATUS=? WHERE BOARD_NO=?

--댓글테이블
CREATE TABLE COMMENTS (
    COMMENT_NO NUMBER PRIMARY KEY,
    COMMENT_BOARD_NO NUMBER,
    COMMENT_WRITER_NO NUMBER,
    COMMENT_CONTENT VARCHAR2(200),
    COMMENT_CREATE_DATE DATE DEFAULT SYSDATE,
    COMMENT_MODIFY_DATE DATE DEFAULT SYSDATE, 
    STATUS VARCHAR2(1) DEFAULT 'Y' CHECK (STATUS IN ('Y', 'N')),
    CONSTRAINT FK_COMMENT_WRITER FOREIGN KEY(COMMENT_WRITER_NO) REFERENCES MEMBER(USER_NO) ON DELETE SET NULL,
    CONSTRAINT FK_COMMENT_BOARD FOREIGN KEY(COMMENT_BOARD_NO) REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE
);
COMMENT ON COLUMN COMMENTS.COMMENT_NO IS '댓글번호';
COMMENT ON COLUMN COMMENTS.COMMENT_BOARD_NO IS '게시글번호';
COMMENT ON COLUMN COMMENTS.COMMENT_WRITER_NO IS '회원번호';
COMMENT ON COLUMN COMMENTS.COMMENT_CONTENT IS '댓글내용';
COMMENT ON COLUMN COMMENTS.COMMENT_CREATE_DATE IS '등록일자';
COMMENT ON COLUMN COMMENTS.COMMENT_MODIFY_DATE IS '수정일자';
COMMENT ON COLUMN COMMENTS.STATUS IS '댓글상태(Y/N)';


CREATE SEQUENCE SEQ_COMMENT_NO;

INSERT INTO COMMENTS VALUES(SEQ_COMMENT_NO.NEXTVAL, 1, 2, 'ASDASD', SYSDATE, SYSDATE, DEFAULT);

-- insert query
-- INSERT INTO COMMENTS VALUES(SEQ_COMMENT_NO.NEXTVAL, ?, ?, ?, SYSDATE, SYSDATE,DEFAULT);


-- 한 게시판에 해당하는 댓글 리스트 조회용 쿼리문
SELECT COMMENT_NO, COMMENT_BOARD_NO, COMMENT_CONTENT, USER_ID, C.COMMENT_CREATE_DATE, C.COMMENT_MODIFY_DATE, C.STATUS
FROM COMMENTS C
JOIN MEMBER M ON(C.COMMENT_WRITER_NO = M.USER_NO)
WHERE C.STATUS='Y' AND COMMENT_BOARD_NO = 2
ORDER BY COMMENT_CREATE_DATE DESC;


--좋아요
CREATE TABLE LIKECOUNT(
    BOARD_NO NUMBER,
    USER_NO NUMBER, 
    STATUS VARCHAR2(1) DEFAULT 'Y',
    CONSTRAINT FK_BOARD_NO FOREIGN KEY(BOARD_NO) REFERENCES BOARD(BOARD_NO) ON DELETE CASCADE,
    CONSTRAINT FK_USER_NO FOREIGN KEY(USER_NO) REFERENCES MEMBER(USER_NO) ON DELETE CASCADE
);

COMMENT ON COLUMN LIKECOUNT.BOARD_NO IS '게시글번호';
COMMENT ON COLUMN LIKECOUNT.USER_NO IS '회원번호';
COMMENT ON COLUMN LIKECOUNT.STATUS IS '좋아요상태(Y,N)';

-- 좋아요 첫클릭시
-- INSERT INTO LIKECOUNT VALUES(?,?,'Y');

-- 게시글 좋아요 갯수검색
-- SELECT COUNT(*) FROM LIKECOUNT WHERE BOARD_NO=?;

-- 좋아요된 상태에서 취소시(취소)
-- UPDATE LIKECOUNT SET STATUS='N' WHERE USER_NO=? AND BOARD_NO=?;

-- 취소된 상태에서 좋아요시(좋아요)
-- UPDATE LIKECOUNT SET STATUS='Y' WHERE USER_NO=? AND BOARD_NO=?;


--방문자수
CREATE TABLE VISIT(
    V_DATE DATE DEFAULT SYSDATE
)